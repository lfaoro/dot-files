#!/usr/bin/env stack
-- stack --resolver lts-5.14 --install-ghc runghc --package turtle
--
{-# LANGUAGE OverloadedStrings #-}

import Prelude hiding (FilePath)
import Turtle

argParser :: Parser (Bool, Bool)
argParser = (,) <$> switch "dry-run" 'd' "Print out commands instead of executing them"
                <*> switch "force" 'f' "Force link creation even if they already exist"

main :: IO ()
main = do
    opts <- options "Dot-files linking script" argParser

    sh $ do
        file <- fmap filename $ ls "./"
        guard (file /= ".DS_Store" && file /= "bootstrap" && file /= ".git" && file /= ".gitmodules")
        liftIO $ link opts file

    where
        unpath p = let (Right t) = toText p in t

        link (isDryRun, isForce) file = do
            target <- fmap unpath $ realpath file
            let force = if isForce then "-f " else ""
            let symlink = "ln -s " <> force <> target <> " " <> unpath ("$HOME" </> file)
            if isDryRun
                then echo symlink >> return ExitSuccess
                else shell symlink empty
